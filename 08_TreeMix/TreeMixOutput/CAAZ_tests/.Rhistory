geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "Se_Strip_682b"), color = "black", fill= "pink", box.padding = 1) +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "Arikara_126306"), color = "black", fill= "pink", box.padding = 1) +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "Arikara_122976"), color = "black", fill= "pink", box.padding = 1) +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "SIP"), color = "black", fill= "pink", box.padding = 1)
PC1PC2_interspecific_lowCovEthnoLabeled
PC1PC2_interspecific_lowCovEthnoLabeled
PC1PC2_interspecific_lowCovEthnoLabeled <- ggplot(PS_Chapter1_allChrom_VQSROutput_G6_PCA_LD0_2, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point(size = 2.75) + colors_interspecific + theme_classic() +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "Arikara_14042_874"), color = "black", fill= "pink", box.padding = 1) +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "Se_Strip_682b"), color = "black", fill= "pink", box.padding = 1) +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "Arikara_126306"), color = "black", fill= "pink", box.padding = 1) +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "Arikara_122976"), color = "black", fill= "pink", box.padding = 1) +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "SIP"), color = "black", fill= "pink", box.padding = 1)
PC1PC2_interspecific_lowCovEthnoLabeled
PC1PC2_interspecific_lowCovEthnoLabeled <- ggplot(PS_Chapter1_allChrom_VQSROutput_G6_PCA_LD0_2, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point(size = 2.75) + colors_interspecific + theme_classic() +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "Arikara_14042_874"), color = "black", fill= "pink", box.padding = 1) +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "Se_Strip_682b"), color = "black", fill= "pink", box.padding = 1) +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "Arikara_126306"), color = "black", fill= "pink", box.padding = 1) +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "Arikara_122976"), color = "black", fill= "pink", box.padding = 1) +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "SIP"), color = "black", fill= "pink", box.padding = 1)
PC1PC2_interspecific_lowCovEthnoLabeled
PC1PC2_interspecific_lowCovEthnoLabeled <- ggplot(PS_Chapter1_allChrom_VQSROutput_G6_PCA_LD0_2, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point(size = 2.75) + colors_interspecific + theme_classic() +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "Arikara_14042_874"), color = "black", fill= "pink", box.padding = 1) +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "Se_Strip_682b"), color = "black", fill= "pink", box.padding = 4) +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "Arikara_126306"), color = "black", fill= "pink", box.padding = 2) +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "Arikara_122976"), color = "black", fill= "pink", box.padding = 5) +
geom_label_repel(aes(label = SampleName),data = ~ subset(., SampleName == "SIP"), color = "black", fill= "pink", box.padding = 5)
PC1PC2_interspecific_lowCovEthnoLabeled
install.packages("SiZer")
install.packages("OptM")
ibrary(OptM)
library(OptM)
library(ggplot2)
library(ggrepel)
setwd("/Users/peterstokes/Documents/Science/Chapter1/05_SNPRelate/csv")
Chapter1_intraspecific <- read.csv("Chapter1_allChrom_noRR_NF_noED_noLowCov_annuusOnly_noTexanus_noIntraInterAdmix_noBadMexCult_wMexWild_D4_Bi_plinked_G2_M5_LD_Pruned_forDStats_forPCA_forfastStructure.csv",as.is=T,header=T)
Chapter1_intraspecific$PopReducedReduced <- factor(Chapter1_intraspecific$PopReducedReduced, levels = c("Cultivar","TV","TV_ethnographic","Wild","mexWild"))
colors_intraspecific <- scale_color_manual(values = c("#Ab9fca","#1d4cc7","#E4102e","#4ba75a","#66aab8"))
PC1PC2_intraspecific <- ggplot(Chapter1_intraspecific, aes(x = PC1, y = PC2, colour = PopReducedReduced)) +
geom_point(size = 2.75) + colors_intraspecific + theme_classic()
PC1PC2_intraspecific
Chapter1_intraspecific$PopReducedReduced <- factor(Chapter1_intraspecific$PopReducedReduced, levels = c("Cultivar","TV","TV_ethnographic","Wild","mexWild"))
colors_intraspecific <- scale_color_manual(values = c("#Ab9fca","#1d4cc7","#E4102e","#4ba75a","#66aab8"))
Chapter1_intraspecific <- read.csv("Chapter1_allChrom_noRR_NF_noED_noLowCov_annuusOnly_noTexanus_noIntraInterAdmix_noBadMexCult_wMexWild_D4_Bi_plinked_G2_M5_LD_Pruned_forDStats_forPCA_forfastStructure.csv",as.is=T,header=T)
Chapter1_intraspecific$PopBasic <- factor(Chapter1_intraspecific$PopBasic, levels = c("Cultivar","TV","TV_ethnographic","Wild","mexWild"))
colors_intraspecific <- scale_color_manual(values = c("#Ab9fca","#1d4cc7","#E4102e","#4ba75a","#66aab8"))
PC1PC2_intraspecific <- ggplot(Chapter1_intraspecific, aes(x = PC1, y = PC2, colour = PopBasic)) +
geom_point(size = 2.75) + colors_intraspecific + theme_classic()
PC1PC2_intraspecific
PC1PC3_intraspecific <- ggplot(Chapter1_intraspecific, aes(x = PC1, y = PC3, colour = PopBasic)) +
geom_point(size = 2.75) + colors_intraspecific + theme_classic()
PC1PC3_intraspecific
PC2PC3_intraspecific <- ggplot(Chapter1_intraspecific, aes(x = PC2, y = PC3, colour = PopBasic)) +
geom_point(size = 2.75) + colors_intraspecific + theme_classic()
PC2PC3_intraspecific
colors_intraspecific <- scale_color_manual(values = c("#9f7eae","#1d4cc7","#E4102e","#4ba75a","#66aab8"))
PC1PC2_intraspecific <- ggplot(Chapter1_intraspecific, aes(x = PC1, y = PC2, colour = PopBasic)) +
geom_point(size = 2.75) + colors_intraspecific + theme_classic()
PC1PC2_intraspecific
Chapter1_intraspecific$PopBasic <- factor(Chapter1_intraspecific$PopBasic, levels = c("Cultivar","TV","TV_ethnographic","Wild","mexWild"))
colors_intraspecific <- scale_color_manual(values = c("#9f7eae","#1d4cc7","#E4102e","#4ba75a","#66aab8"))
PC1PC2_intraspecific <- ggplot(Chapter1_intraspecific, aes(x = PC1, y = PC2, colour = PopBasic)) +
geom_point(size = 2.75) + colors_intraspecific + theme_classic()
PC1PC2_intraspecific
PC1PC3_intraspecific <- ggplot(Chapter1_intraspecific, aes(x = PC1, y = PC3, colour = PopBasic)) +
geom_point(size = 2.75) + colors_intraspecific + theme_classic()
PC1PC3_intraspecific
PC2PC3_intraspecific <- ggplot(Chapter1_intraspecific, aes(x = PC2, y = PC3, colour = PopBasic)) +
geom_point(size = 2.75) + colors_intraspecific + theme_classic()
PC2PC3_intraspecific
Chapter1_intraspecific$PopReduced <- factor(Chapter1_intraspecific$PopReduced, levels = c("Cultivar","TV","TV_ethnographic","IA_KS","ND_SD","MB_SK","AR_IL_NB","MO","OK","WY","TX","CO_UT_NM","CA_AZ_NV","mexWild"))
colors_intraspecific <- scale_color_manual(values = c("#9f7eae","#1d4cc7","#E4102e","#4ba75a","#D6BA73","#89c7fa","#F3D3BD","#563471","#Df698f","#Be855f","#E59123","#f138f5","#F5e24e","#66aab8"))
PC1PC2_intraspecific <- ggplot(Chapter1_intraspecific, aes(x = PC1, y = PC2, colour = PopReduced)) +
geom_point(size = 2.75) + colors_intraspecific + theme_classic()
PC1PC2_intraspecific
PC1PC3_intraspecific <- ggplot(Chapter1_intraspecific, aes(x = PC1, y = PC3, colour = PopReduced)) +
geom_point(size = 2.75) + colors_intraspecific + theme_classic()
PC1PC3_intraspecific
PC2PC3_intraspecific <- ggplot(Chapter1_intraspecific, aes(x = PC2, y = PC3, colour = PopReduced)) +
geom_point(size = 2.75) + colors_intraspecific + theme_classic()
PC2PC3_intraspecific
Chapter1_intraspecific$PopReducedReduced <- factor(Chapter1_intraspecific$PopReducedReduced, levels = c("Cultivar","TV","TV_ethnographic","ENA","CO_UT_NM_TX","CA_AZ_NV","mexWild"))
colors_intraspecific <- scale_color_manual(values = c("#9f7eae","#1d4cc7","#E4102e","#4ba75a","#E59123","#F5e24e","#66aab8"))
PC1PC2_intraspecific <- ggplot(Chapter1_intraspecific, aes(x = PC1, y = PC2, colour = PopReducedReduced)) +
geom_point(size = 2.75) + colors_intraspecific + theme_classic()
PC1PC2_intraspecific
PC1PC3_intraspecific <- ggplot(Chapter1_intraspecific, aes(x = PC1, y = PC3, colour = PopReducedReduced)) +
geom_point(size = 2.75) + colors_intraspecific + theme_classic()
PC1PC3_intraspecific
PC2PC3_intraspecific <- ggplot(Chapter1_intraspecific, aes(x = PC2, y = PC3, colour = PopReducedReduced)) +
geom_point(size = 2.75) + colors_intraspecific + theme_classic()
PC2PC3_intraspecific
library(ggplot2)
library(ggrepel)
Chapter1_interspecific <- read.csv("Chapter1_allChrom_noRR_NF_noED_noLowCov_D4_Bi_plinked_G2_M5_LD_Pruned_forDStats_forPCA_forfastStructure.csv",as.is=T,header=T)
Chapter1_interspecific$PopBasic <- factor(Chapter1_interspecific$PopBasic, levels = c("Cultivar","TV","TV_ethnographic","Wild","mexWild","TX_texanus","argophyllus","niveus","petiolaris"))
write.table(tab_interspecific, file = "Chapter1_allChrom_noRR_NF_noED_noLowCov_D4_Bi_plinked_G2_M3_LD_Pruned_forDStats_forPCA_forfastStructure.csv")
Chapter1_interspecific <- read.csv("Chapter1_allChrom_noRR_NF_noED_noLowCov_D4_Bi_plinked_G2_M5_LD_Pruned_forDStats_forPCA_forfastStructure.csv",as.is=T,header=T)
Chapter1_interspecific$PopBasic <- factor(Chapter1_interspecific$PopBasic, levels = c("Cultivar","TV","TV_ethnographic","Wild","mexWild","TX_texanus","argophyllus","niveus","petiolaris"))
View(Chapter1_interspecific)
Chapter1_interspecific <- read.csv("Chapter1_allChrom_noRR_NF_noED_noLowCov_D4_Bi_plinked_G2_M5_LD_Pruned_forDStats_forPCA_forfastStructure.csv",as.is=T,header=T)
Chapter1_interspecific$PopBasic <- factor(Chapter1_interspecific$PopBasic, levels = c("Cultivar","TV","TV_ethnographic","Wild","mexWild","TX_texanus","argophyllus","niveus","petiolaris"))
colors_interspecific <- scale_color_manual(values = c("#9f7eae","#1d4cc7","#E4102e","#4ba75a","#66aab8","#cdeb1e","#1e1e1e","#5e6060","#C3c3c3"))
PC1PC2_interspecific <- ggplot(Chapter1_interspecific, aes(x = PC1, y = PC2, colour = PopBasic)) +
geom_point(size = 2.75) + colors_interspecific + theme_classic()
PC1PC2_interspecific
PC1PC3_interspecific <- ggplot(Chapter1_interspecific, aes(x = PC1, y = PC3, colour = PopBasic)) +
geom_point(size = 2.75) + colors_interspecific + theme_classic()
PC1PC3_interspecific
PC2PC3_interspecific <- ggplot(Chapter1_interspecific, aes(x = PC2, y = PC3, colour = PopBasic)) +
geom_point(size = 2.75) + colors_interspecific + theme_classic()
PC2PC3_interspecific
Chapter1_interspecific$PopReduced <- factor(Chapter1_interspecific$PopReduced, levels = c("Cultivar","TV","TV_ethnographic","IA_KS","ND_SD","MB_SK","AR_IL_NB","MO","OK","WY","TX","CO_UT_NM","CA_AZ_NV","mexWild","TX_texanus","argophyllus","niveus","petiolaris"))
colors_interspecific <- scale_color_manual(values = c("#9f7eae","#1d4cc7","#E4102e","#4ba75a","#D6BA73","#89c7fa","#F3D3BD","#563471","#Df698f","#Be855f","#E59123","#f138f5","#F5e24e","#66aab8","#cdeb1e","#1e1e1e","#5e6060","#C3c3c3"))
PC1PC2_interspecific <- ggplot(Chapter1_interspecific, aes(x = PC1, y = PC2, colour = PopReduced)) +
geom_point(size = 2.75) + colors_interspecific + theme_classic()
PC1PC2_interspecific
PC1PC3_interspecific <- ggplot(Chapter1_interspecific, aes(x = PC1, y = PC3, colour = PopReduced)) +
geom_point(size = 2.75) + colors_interspecific + theme_classic()
PC1PC3_interspecific
PC2PC3_interspecific <- ggplot(Chapter1_interspecific, aes(x = PC2, y = PC3, colour = PopReduced)) +
geom_point(size = 2.75) + colors_interspecific + theme_classic()
PC2PC3_interspecific
Chapter1_interspecific$PopReducedReduced <- factor(Chapter1_interspecific$PopReducedReduced, levels = c("Cultivar","TV","TV_ethnographic","ENA","CO_UT_NM_TX","CA_AZ_NV","mexWild","TX_texanus","argophyllus","niveus","petiolaris"))
colors_interspecific <- scale_color_manual(values = c("#9f7eae","#1d4cc7","#E4102e","#4ba75a","#E59123","#F5e24e","#66aab8","#cdeb1e","#1e1e1e","#5e6060","#C3c3c3"))
PC1PC2_interspecific <- ggplot(Chapter1_interspecific, aes(x = PC1, y = PC2, colour = PopReducedReduced)) +
geom_point(size = 2.75) + colors_interspecific + theme_classic()
PC1PC2_interspecific
PC1PC3_interspecific <- ggplot(Chapter1_interspecific, aes(x = PC1, y = PC3, colour = PopReducedReduced)) +
geom_point(size = 2.75) + colors_interspecific + theme_classic()
PC1PC3_interspecific
PC2PC3_interspecific <- ggplot(Chapter1_interspecific, aes(x = PC2, y = PC3, colour = PopReducedReduced)) +
geom_point(size = 2.75) + colors_interspecific + theme_classic()
PC2PC3_interspecific
library(SNPRelate)
setwd("/Users/peterstokes/Documents/Science/Chapter1/05_SNPRelate/csv")
interspecific_biallelic_vcf.fn = "/Users/peterstokes/Documents/Science/Chapter1/05_SNPRelate/vcfs/Chapter1_allChrom_noRR_NF_noED_noLowCov_D4_Bi_plinked_G2_M5_LD_Pruned_forDStats_forPCA_forfastStructure.vcf"
snpgdsVCF2GDS(interspecific_biallelic_vcf.fn, "/Users/peterstokes/Documents/Science/Chapter1/05_SNPRelate/outs/Chapter1_allChrom_noRR_NF_noED_noLowCov_D4_Bi_plinked_G2_M5_LD_Pruned_forDStats_forPCA_forfastStructure.gds", method="biallelic.only")
snpgdsSummary("/Users/peterstokes/Documents/Science/Chapter1/05_SNPRelate/outs/Chapter1_allChrom_noRR_NF_noED_noLowCov_D4_Bi_plinked_G2_M5_LD_Pruned_forDStats_forPCA_forfastStructure.gds")
genofile_interspecific <- snpgdsOpen("/Users/peterstokes/Documents/Science/Chapter1/05_SNPRelate/outs/Chapter1_allChrom_noRR_NF_noED_noLowCov_D4_Bi_plinked_G2_M5_LD_Pruned_forDStats_forPCA_forfastStructure.gds")
head(genofile_interspecific)
set.seed(1000)
#LD Threshold 0.2
snpset_interspecific <- snpgdsLDpruning(genofile_interspecific, ld.threshold=0.9999, autosome.only=FALSE)
#edit based on above selection of LD threshold
snpset_interspecific.id <- unlist(unname(snpset_interspecific))
####
sample.id <- read.gdsn(index.gdsn(genofile_interspecific, "sample.id"))
pca_interspecific <- snpgdsPCA(genofile_interspecific, snp.id=snpset_interspecific.id, autosome.only=FALSE, num.thread=4)
pc_interspecific.percent <- pca_interspecific$varprop*100
head(round(pc_interspecific.percent, 2))
tab_interspecific <- data.frame(sample_interspecific.id = pca_interspecific$sample.id, PC1 = pca_interspecific$eigenvect[,1],    # the first eigenvector
PC2 = pca_interspecific$eigenvect[,2],    # the second eigenvector
PC3 = pca_interspecific$eigenvect[,3],
PC4 = pca_interspecific$eigenvect[,4],
PC5 = pca_interspecific$eigenvect[,5],
PC6 = pca_interspecific$eigenvect[,6],
PC7 = pca_interspecific$eigenvect[,7],
stringsAsFactors = FALSE)
head(tab_interspecific)
plot(tab_interspecific$PC1, tab_interspecific$PC2, xlab="PC1", ylab="PC2")
intraspecific_biallelic_vcf.fn = "/Users/peterstokes/Documents/Science/Chapter1/05_SNPRelate/vcfs/Chapter1_allChrom_noRR_NF_noED_noLowCov_annuusOnly_noTexanus_noIntraInterAdmix_noBadMexCult_wMexWild_D4_Bi_plinked_G2_M5_LD_Pruned_forDStats_forPCA_forfastStructure.vcf"
snpgdsVCF2GDS(intraspecific_biallelic_vcf.fn, "/Users/peterstokes/Documents/Science/Chapter1/05_SNPRelate/outs/Chapter1_allChrom_noRR_NF_noED_noLowCov_annuusOnly_noTexanus_noIntraInterAdmix_noBadMexCult_wMexWild_D4_Bi_plinked_G2_M5_LD_Pruned_forDStats_forPCA_forfastStructure.gds", method="biallelic.only")
snpgdsSummary("/Users/peterstokes/Documents/Science/Chapter1/05_SNPRelate/outs/Chapter1_allChrom_noRR_NF_noED_noLowCov_annuusOnly_noTexanus_noIntraInterAdmix_noBadMexCult_wMexWild_D4_Bi_plinked_G2_M5_LD_Pruned_forDStats_forPCA_forfastStructure.gds")
genofile_intraspecific <- snpgdsOpen("/Users/peterstokes/Documents/Science/Chapter1/05_SNPRelate/outs/Chapter1_allChrom_noRR_NF_noED_noLowCov_annuusOnly_noTexanus_noIntraInterAdmix_noBadMexCult_wMexWild_D4_Bi_plinked_G2_M5_LD_Pruned_forDStats_forPCA_forfastStructure.gds")
head(genofile_intraspecific)
set.seed(1000)
#LD Threshold 0.2
snpset_intraspecific <- snpgdsLDpruning(genofile_intraspecific, ld.threshold=0.9999, autosome.only=FALSE)
#edit based on above selection of LD threshold
snpset_intraspecific.id <- unlist(unname(snpset_intraspecific))
####
sample.id <- read.gdsn(index.gdsn(genofile_intraspecific, "sample.id"))
pca_intraspecific <- snpgdsPCA(genofile_intraspecific, snp.id=snpset_intraspecific.id, autosome.only=FALSE, num.thread=4)
pc_intraspecific.percent <- pca_intraspecific$varprop*100
head(round(pc_intraspecific.percent, 2))
tab_intraspecific <- data.frame(sample_intraspecific.id = pca_intraspecific$sample.id, PC1 = pca_intraspecific$eigenvect[,1],    # the first eigenvector
PC2 = pca_intraspecific$eigenvect[,2],    # the second eigenvector
PC3 = pca_intraspecific$eigenvect[,3],
PC4 = pca_intraspecific$eigenvect[,4],
PC5 = pca_intraspecific$eigenvect[,5],
PC6 = pca_intraspecific$eigenvect[,6],
PC7 = pca_intraspecific$eigenvect[,7],
stringsAsFactors = FALSE)
head(tab_intraspecific)
plot(tab_intraspecific$PC1, tab_intraspecific$PC2, xlab="PC1", ylab="PC2")
file_to_use <- "/Users/peterstokes/Documents/Science/Chapter1/02_haplotypeNetworks/vcfs/Chapter1_plastome_wAncient_filtered_spanningFixed_missingFixed.vcf"
#where to find files for pegas
setwd("/Users/peterstokes/Documents/Science/Chapter1/02_haplotypeNetworks/05_pegasIntermediates")
file_to_use <- "/Users/peterstokes/Documents/Science/Chapter1/02_haplotypeNetworks/vcfs/Chapter1_plastome_wAncient_filtered_spanningFixed_missingFixed.vcf"
# Reading in the VCF file and storing info on it
gene_investigated_info <- VCFloci(file_to_use)
library(pegas)
library(vcfR)
library(xlsx)
#where to find files for pegas
setwd("/Users/peterstokes/Documents/Science/Chapter1/02_haplotypeNetworks/05_pegasIntermediates")
file_to_use <- "/Users/peterstokes/Documents/Science/Chapter1/02_haplotypeNetworks/vcfs/Chapter1_plastome_wAncient_filtered_spanningFixed_missingFixed.vcf"
# Reading in the VCF file and storing info on it
gene_investigated_info <- VCFloci(file_to_use)
gene_investigated <- read.vcf(file_to_use)
names(gene_investigated) <- paste0(gene_investigated_info$POS)
# Figuring out how many SNPs are covered in the samples
table_SNP_characterized <- as.data.frame(!gene_investigated[,]==".")
Number_SNPs_per_sample <- as.data.frame(rowSums(table_SNP_characterized))
write.csv(Number_SNPs_per_sample, "Plastome_SNPs_covered.csv")
View(Number_SNPs_per_sample)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.91 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "Plastome_SNPs_91.fasta", format = "fasta", colsep = "", nbcol = -1)
#where to find files for pegas
setwd("/Users/peterstokes/Documents/Science/Chapter1/02_haplotypeNetworks/05_pegasIntermediates")
file_to_use <- "/Users/peterstokes/Documents/Science/Chapter1/02_haplotypeNetworks/vcfs/Chapter1_plastome_wAncient_filtered_spanningFixed_missingFixed.vcf"
# Reading in the VCF file and storing info on it
gene_investigated_info <- VCFloci(file_to_use)
gene_investigated <- read.vcf(file_to_use)
names(gene_investigated) <- paste0(gene_investigated_info$POS)
# Figuring out how many SNPs are covered in the samples
table_SNP_characterized <- as.data.frame(!gene_investigated[,]==".")
Number_SNPs_per_sample <- as.data.frame(rowSums(table_SNP_characterized))
write.csv(Number_SNPs_per_sample, "Plastome_SNPs_covered.csv")
View(Number_SNPs_per_sample)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.85 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "Plastome_SNPs_85.fasta", format = "fasta", colsep = "", nbcol = -1)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.68 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "Plastome_SNPs_68.fasta", format = "fasta", colsep = "", nbcol = -1)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.67 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "Plastome_SNPs_67.fasta", format = "fasta", colsep = "", nbcol = -1)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.72 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "Plastome_SNPs_72.fasta", format = "fasta", colsep = "", nbcol = -1)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.74 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "Plastome_SNPs_74.fasta", format = "fasta", colsep = "", nbcol = -1)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.76 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "Plastome_SNPs_76.fasta", format = "fasta", colsep = "", nbcol = -1)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.80 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "Plastome_SNPs_80.fasta", format = "fasta", colsep = "", nbcol = -1)
library(pegas)
library(vcfR)
library(xlsx)
#where to find files for pegas
setwd("/Users/peterstokes/Documents/Science/Chapter1/02_haplotypeNetworks/05_pegasIntermediates")
file_to_use <- "/Users/peterstokes/Documents/Science/Chapter1/02_haplotypeNetworks/vcfs/Chapter1_plastome_wAncient_filtered_spanningFixed_missingFixed.vcf"
file_to_use <- "/Users/peterstokes/Documents/Science/Chapter1/02_haplotypeNetworks/vcfs/Chapter1_plastome_wAncient_filtered_spanningFixed_missingFixed.vcf"
# Reading in the VCF file and storing info on it
gene_investigated_info <- VCFloci(file_to_use)
gene_investigated <- read.vcf(file_to_use)
names(gene_investigated) <- paste0(gene_investigated_info$POS)
# Figuring out how many SNPs are covered in the samples
table_SNP_characterized <- as.data.frame(!gene_investigated[,]==".")
Number_SNPs_per_sample <- as.data.frame(rowSums(table_SNP_characterized))
write.csv(Number_SNPs_per_sample, "Plastome_SNPs_covered.csv")
#where to find files for pegas
setwd("/Users/peterstokes/Documents/Science/Chapter1/02_haplotypeNetworks/05_pegasIntermediates")
file_to_use <- "/Users/peterstokes/Documents/Science/Chapter1/02_haplotypeNetworks/vcfs/Chapter1_plastome_wAncient_filtered_spanningFixed_missingFixed.vcf"
# Reading in the VCF file and storing info on it
gene_investigated_info <- VCFloci(file_to_use)
gene_investigated <- read.vcf(file_to_use)
names(gene_investigated) <- paste0(gene_investigated_info$POS)
# Figuring out how many SNPs are covered in the samples
table_SNP_characterized <- as.data.frame(!gene_investigated[,]==".")
Number_SNPs_per_sample <- as.data.frame(rowSums(table_SNP_characterized))
write.csv(Number_SNPs_per_sample, "Plastome_SNPs_covered.csv")
file_to_use <- "/Users/peterstokes/Documents/Science/Chapter1/02_haplotypeNetworks/vcfs/Chapter1_plastome_wAncient_filtered_spanningFixed_missingFixed.vcf"
file_to_use <- "/Users/peterstokes/Documents/Science/Chapter1/02_haplotypeNetworks/vcfs/Chapter1_plastome_wAncient_filtered_spanningFixed_missingFixed.vcf"
# Reading in the VCF file and storing info on it
gene_investigated_info <- VCFloci(file_to_use)
gene_investigated <- read.vcf(file_to_use)
names(gene_investigated) <- paste0(gene_investigated_info$POS)
# Figuring out how many SNPs are covered in the samples
table_SNP_characterized <- as.data.frame(!gene_investigated[,]==".")
Number_SNPs_per_sample <- as.data.frame(rowSums(table_SNP_characterized))
write.csv(Number_SNPs_per_sample, "Plastome_SNPs_covered.csv")
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.85 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "Plastome_SNPs_85.fasta", format = "fasta", colsep = "", nbcol = -1)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.89 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "Plastome_SNPs_89.fasta", format = "fasta", colsep = "", nbcol = -1)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.81 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "Plastome_SNPs_81.fasta", format = "fasta", colsep = "", nbcol = -1)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.77 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "Plastome_SNPs_77.fasta", format = "fasta", colsep = "", nbcol = -1)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.769 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "Plastome_SNPs_769.fasta", format = "fasta", colsep = "", nbcol = -1)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.67 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "Plastome_SNPs_67.fasta", format = "fasta", colsep = "", nbcol = -1)
View(Good_data_cleaned)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.67 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
View(Good_data_cleaned)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.769 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
View(Good_data_cleaned)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.85 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
View(Good_data_cleaned)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.769 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
View(Good_data_cleaned)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.85 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.85 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
View(Good_data_cleaned)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.62 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "Plastome_SNPs_62.fasta", format = "fasta", colsep = "", nbcol = -1)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.85 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
View(Good_data_cleaned)
View(Good_data_cleaned)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.47 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "Plastome_SNPs_47.fasta", format = "fasta", colsep = "", nbcol = -1)
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.18 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "Plastome_SNPs_18.fasta", format = "fasta", colsep = "", nbcol = -1)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m0_iter_1"
plot_tree(prefix)
library(RColorBrewer)
library(R.utils)
source("/Users/peterstokes/Documents/Science/Chapter1/08_TreeMix/scripts/plotting_funcs.R") # here you need to add the path
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m0_iter_1"
plot_tree(prefix)
setwd("/Users/peterstokes/Documents/Science/Chapter1/08_TreeMix/TreeMixOutput/CAAZ_tests") # of course this needs to be adjusted
library(RColorBrewer)
library(R.utils)
source("/Users/peterstokes/Documents/Science/Chapter1/08_TreeMix/scripts/plotting_funcs.R") # here you need to add the path
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m0_iter_1"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m0_iter_2"
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m0_iter_2"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m0_iter_3"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m0_iter_4"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m0_iter_5"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m0_iter_6"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m0_iter_7"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m0_iter_8"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m0_iter_9"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m0_iter_10"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m1_iter_1"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m1_iter_2"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m1_iter_3"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m2_iter_1"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m1_iter_2"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m2_iter_2"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m2_iter_3"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m2_iter_4"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m2_iter_5"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m2_iter_6"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m2_iter_7"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m2_iter_8"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m2_iter_9"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m2_iter_10"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m4_iter_1"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m4_iter_2"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m4_iter_3"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m4_iter_4"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m4_iter_5"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m4_iter_6"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m4_iter_7"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m4_iter_8"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m4_iter_9"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m8_iter_1"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m7_iter_2"
plot_tree(prefix)
prefix="Chapter1_allChrom_noRR_NF_noED_noLowCov_noInterIntraAdmix_noBadMexCult_wMexWild_wCAAZ_D4_Bi_plinked_G2_M5_LD_Pruned_TreeMixInput_SampleSizeCorrection_m9_iter_1"
plot_tree(prefix)
