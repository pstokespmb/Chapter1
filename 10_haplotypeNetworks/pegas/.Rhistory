color="black") +
geom_polygon( data = myMap_canada ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_guatemala ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_belize ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_honduras ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_elsalvador ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
coord_fixed(xlim = c(-125, -70),  ylim = c(17, 50), ratio = 1.3) +
theme(line = element_blank(),
panel.background = element_rect(fill = "lightblue")) +
theme_nothing()
NA_Map
legend_title <- "Domestication Status"
LRE_WILD_Coordinates$DomStatus <- factor(LRE_WILD_Coordinates$DomStatus, levels = c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "argophyllus", "petiolaris fallax", "petiolaris petiolaris", "niveus canescens"))
NA_Map + geom_point(aes(x = Long, y = Lat, colour = DomStatus), data = LRE_WILD_Coordinates, size = 2) +
scale_fill_manual(legend_title, labels = LRE_WILD_Coordinates$DomStatus) +
theme(legend.title = element_text(colour="black", size=10, face="bold")) +
theme(legend.position = c(0.9, 0.2)) +
scale_color_manual(values=c("green", "blue", "red", "purple", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "argophyllus", "petiolaris fallax", "petiolaris petiolaris", "niveus canescens"))
NA_Map <- ggplot() +
geom_polygon( data = myMap_usa ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_mexico ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_canada ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_guatemala ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_belize ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_honduras ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_elsalvador ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
coord_fixed(xlim = c(-125, -70),  ylim = c(17, 50), ratio = 1.3) +
theme(line = element_blank(),
panel.background = element_rect(fill = "lightblue")) +
NA_Map
legend_title <- "Domestication Status"
LRE_WILD_Coordinates$DomStatus <- factor(LRE_WILD_Coordinates$DomStatus, levels = c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "argophyllus", "petiolaris fallax", "petiolaris petiolaris", "niveus canescens"))
NA_Map + geom_point(aes(x = Long, y = Lat, colour = DomStatus), data = LRE_WILD_Coordinates, size = 2) +
scale_fill_manual(legend_title, labels = LRE_WILD_Coordinates$DomStatus) +
theme(legend.title = element_text(colour="black", size=10, face="bold")) +
theme(legend.position = c(0.9, 0.2)) +
scale_color_manual(values=c("green", "blue", "red", "purple", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "argophyllus", "petiolaris fallax", "petiolaris petiolaris", "niveus canescens"))
myMap_elsalvador <- map_data("worldHires","El Salvador")
NA_Map <- ggplot() +
geom_polygon( data = myMap_usa ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_mexico ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_canada ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_guatemala ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_belize ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_honduras ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_elsalvador ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
coord_fixed(xlim = c(-125, -70),  ylim = c(17, 50), ratio = 1.3) +
theme(line = element_blank(),
panel.background = element_rect(fill = "lightblue")) +
NA_Map
NA_Map <- ggplot() +
geom_polygon( data = myMap_usa ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_mexico ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_canada ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_guatemala ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_belize ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_honduras ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_elsalvador ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
coord_fixed(xlim = c(-125, -70),  ylim = c(17, 50), ratio = 1.3) +
theme(line = element_blank(),
panel.background = element_rect(fill = "lightblue"))
NA_Map
legend_title <- "Domestication Status"
LRE_WILD_Coordinates$DomStatus <- factor(LRE_WILD_Coordinates$DomStatus, levels = c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "argophyllus", "petiolaris fallax", "petiolaris petiolaris", "niveus canescens"))
NA_Map + geom_point(aes(x = Long, y = Lat, colour = DomStatus), data = LRE_WILD_Coordinates, size = 2) +
scale_fill_manual(legend_title, labels = LRE_WILD_Coordinates$DomStatus) +
theme(legend.title = element_text(colour="black", size=10, face="bold")) +
theme(legend.position = c(0.9, 0.2)) +
scale_color_manual(values=c("green", "blue", "red", "purple", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "argophyllus", "petiolaris fallax", "petiolaris petiolaris", "niveus canescens"))
NA_Map
SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution <- read.csv("~/Documents/Science/BlackmanLab/Projects/SNPRelate/SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution.csv")
View(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution)
NA_Map + geom_point(aes(x = Long, y = Lat, colour = DomStatus), data = LRE_WILD_Coordinates, size = 2) +
scale_fill_manual(legend_title, labels = LRE_WILD_Coordinates$DomStatus) +
theme(legend.title = element_text(colour="black", size=10, face="bold")) +
theme(legend.position = c(0.9, 0.2)) +
scale_color_manual(values=c("green", "blue", "red", "purple", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))
NA_Map + geom_point(aes(x = Long, y = Lat, colour = DomStatus), data = LRE_WILD_Coordinates, size = 2) +
scale_fill_manual(legend_title, labels = LRE_WILD_Coordinates$DomStatus) +
theme(legend.title = element_text(colour="black", size=10, face="bold")) +
theme(legend.position = c(0.85, 0.2)) +
scale_color_manual(values=c("green", "blue", "red", "purple", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))
NA_Map + geom_point(aes(x = Long, y = Lat, colour = DomStatus), data = LRE_WILD_Coordinates, size = 2) +
scale_fill_manual(legend_title, labels = LRE_WILD_Coordinates$DomStatus) +
theme(legend.title = element_text(colour="black", size=10, face="bold")) +
theme(legend.position = c(0.80, 0.2)) +
scale_color_manual(values=c("green", "blue", "red", "purple", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))
NA_Map + geom_point(aes(x = Long, y = Lat, colour = DomStatus), data = LRE_WILD_Coordinates, size = 2) +
scale_fill_manual(legend_title, labels = LRE_WILD_Coordinates$DomStatus) +
theme(legend.title = element_text(colour="black", size=10, face="bold")) +
theme(legend.position = c(0.83, 0.2)) +
scale_color_manual(values=c("green", "blue", "red", "purple", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("#00ffff", "#228b22", "#4b0082", "#2f4f4f", "#ff8c00", "#ffff00", "#00ff00", "#ff0000", "#ff00ff", "#1e90ff"))
SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution <- read.csv("~/Documents/Science/BlackmanLab/Projects/SNPRelate/SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution.csv")
View(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution)
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("#00ffff", "#228b22", "#4b0082", "#2f4f4f", "#ff8c00", "#ffff00", "#00ff00", "#ff0000", "#ff00ff", "#1e90ff"))
#theme(legend.position="none")
p
SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution$Population <- factor(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution$Population, levels = c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus canescens"))
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("#00ffff", "#228b22", "#4b0082", "#2f4f4f", "#ff8c00", "#ffff00", "#00ff00", "#ff0000", "#ff00ff", "#1e90ff"))
#theme(legend.position="none")
p
SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution$Population <- factor(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution$Population, levels = c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("#00ffff", "#228b22", "#4b0082", "#2f4f4f", "#ff8c00", "#ffff00", "#00ff00", "#ff0000", "#ff00ff", "#1e90ff"))
#theme(legend.position="none")
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("#00ffff", "#228b22", "#4b0082", "#2f4f4f", "#ff8c00", "#ffff00", "#00ff00", "#ff0000", "#ff00ff", "#1e90ff"))
#theme(legend.position="none")
p
SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution <- read.csv("~/Documents/Science/BlackmanLab/Projects/SNPRelate/SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution.csv")
View(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution)
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("#00ffff", "#228b22", "#4b0082", "#2f4f4f", "#ff8c00", "#ffff00", "#00ff00", "#ff0000", "#ff00ff", "#1e90ff"))
#theme(legend.position="none")
p
SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution$Population <- factor(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution$Population, levels = c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("#00ffff", "#228b22", "#4b0082", "#2f4f4f", "#ff8c00", "#ffff00", "#00ff00", "#ff0000", "#ff00ff", "#1e90ff"))
#theme(legend.position="none")
p
SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution$Population <- factor(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution$Population, levels = c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
heme(legend.position = c(0.83, 0.2))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.position = c(0.83, 0.2))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.position = c(0.9, 0.2))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
guides(shape = guide_legend(override.aes = list(size = 0.5)))
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
guides(shape = guide_legend(override.aes = list(size = 0.5))) +
theme(legend.position = c(0.9, 0.2))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
guides(shape = guide_legend(override.aes = list(size = 5))) +
theme(legend.position = c(0.9, 0.2))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.key.size = unit(2, 'cm'))+
theme(legend.position = c(0.9, 0.2))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.key.size = unit(1, 'cm'))+
theme(legend.position = c(0.9, 0.2))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.key.size = unit(.5, 'cm'))+
theme(legend.position = c(0.9, 0.2))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.key.size = unit(.5, 'cm'))+
theme(legend.position = c(0.9, 0.3))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.key.size = unit(.5, 'cm'))+
theme(legend.position = c(0.85, 0.25))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.key.size = unit(.5, 'cm'))+
theme(legend.position = c(0.85, 0.23))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.key.size = unit(.5, 'cm'))+
theme(legend.position = c(0.83, 0.23))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.key.size = unit(.5, 'cm'))+
theme(legend.position = c(0.83, 0.21))
p
library(MCMC.qpcr)
mydata=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis.csv")
mydata=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis_CT.csv")
CT_Info=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis_CT.csv")
efficiency_Info=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis_CT.csv")
efficiency_Info=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis_efficiencies.csv")
efficiency_Info=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis_efficiencies.csv")
efficiency_Info=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis_efficiencies.csv")
dd=cq2counts(
data=CT_Info,
genecols=c(5:5),
condcols=(1:4),
effic=efficiency_Info,
Cq1=30
)
head(dd)
CT_Info=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis_CT.csv")
efficiency_Info=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis_efficiencies.csv")
dd=cq2counts(
data=CT_Info,
genecols=c(5:5),
condcols=(1:4),
effic=efficiency_Info,
Cq1=30
)
head(dd)
dd=cq2counts(
data=CT_Info,
genecols=c(5:5),
condcols=(1:4),
effic=efficiency_Info,
Cq1=37
)
head(dd)
dd=cq2counts(
data=CT_Info,
genecols=c(5:5),
condcols=(1:4),
effic=efficiency_Info,
Cq1=30
)
head(dd)
dd
load("~/Desktop/allChrom.eigenvector")
allChrom <- read.delim("~/Desktop/allChrom.eigenvector")
View(allChrom)
library(ggplot2)
ggplot(allChrom, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
ggplot(allChrom, aes(x = PC1, y = PC4, colour = Pop)) +
geom_point() +
theme_classic()
ggplot(allChrom, aes(x = PC1, y = PC1, colour = Pop)) +
geom_point() +
theme_classic()
ggplot(allChrom, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
allChrom_eigenvector <- read.csv("~/Desktop/allChrom_eigenvector.csv")
View(allChrom_eigenvector)
ggplot(allChrom_eigenvector, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
allChrom_eigenvector <- read.csv("~/Desktop/allChrom_eigenvector.csv")
View(allChrom_eigenvector)
ggplot(allChrom_eigenvector, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
allChrom_eigenvector_2 <- read.csv("~/Desktop/allChrom_eigenvector_2.csv")
View(allChrom_eigenvector_2)
ggplot(allChrom_eigenvector_2, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
install.packages("pegas")
install.packages("lgfortran")
install.packages("pegas")
install.packages("gfortran")
install.packages("ape")
install.packages("pegas")
allChrom_3 <- read.csv("~/Desktop/allChrom_3.eigenvector")
View(allChrom_3)
allChrom_3.eigenvector <- read.csv("~/Desktop/allChrom_3.eigenvector.csv")
View(allChrom_3.eigenvector)
ggplot(allChrom_3.eigenvector, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
library(ggplot2)
ggplot(allChrom_3.eigenvector, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
allChrom_eigenvector <- read.csv("~/Desktop/allChrom_eigenvector.csv")
View(allChrom_eigenvector)
ggplot(allChrom_eigenvector, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
allChrom_3.eigenvector <- read.csv("~/Desktop/allChrom_3.eigenvector.csv")
View(allChrom_3.eigenvector)
ggplot(allChrom_3.eigenvector, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
library(ggplot2)
ggplot(allChrom_3.eigenvector, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
install.packages("pegas")
install.packages("pegas")
system("gcc --version")
system("gcc --version")
install.packages("pegas")
install.packages("stringr")
install.packages("pegas")
install.packages("pegas")
library(pegas)
library(vcfR)
library(xlsx)
library(pegas)
library(vcfR)
library(xlsx)
#where to find files for pegas
setwd("/Users/peterstokes/Desktop/pegas")
file_to_use <- "GATK_plastome_filtered_mapQ30_SNPs_3_admixedRemoved_newNames.vcf"
Sample_matrix_for_popart <- read.xlsx("HaploNaming_PeterStokes.xlsx", sheetName = "Pop_art_import")
Sample_matrix_for_popart <- read.xlsx("HaploNaming_PeterStokes.xlsx", sheetName = "Pop_art_import")
# Reading in the VCF file and storing info on it
gene_investigated_info <- VCFloci(file_to_use)
gene_investigated <- read.vcf(file_to_use)
names(gene_investigated) <- paste0(gene_investigated_info$POS)
# Figuring out how many SNPs are covered in the samples
table_SNP_characterized <- as.data.frame(!gene_investigated[,]==".")
Number_SNPs_per_sample <- as.data.frame(rowSums(table_SNP_characterized))
write.csv(Number_SNPs_per_sample, "Plastome_SNPs_covered.csv")
file_to_use <- "GATK_plastome_filtered_mapQ30_SNPs_3_admixedRemoved_newNames.vcf"
file_to_use <- "GATK_plastome_filtered_mapQ30_SNPs_3_admixedRemoved_newNames.vcf"
Sample_matrix_for_popart <- read.xlsx("HaploNaming_PeterStokes.xlsx", sheetName = "Pop_art_import")
# Reading in the VCF file and storing info on it
gene_investigated_info <- VCFloci(file_to_use)
gene_investigated <- read.vcf(file_to_use)
names(gene_investigated) <- paste0(gene_investigated_info$POS)
# Figuring out how many SNPs are covered in the samples
table_SNP_characterized <- as.data.frame(!gene_investigated[,]==".")
Number_SNPs_per_sample <- as.data.frame(rowSums(table_SNP_characterized))
write.csv(Number_SNPs_per_sample, "Plastome_SNPs_covered.csv")
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.90 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "plastome_SNPs_90.fasta", format = "fasta", colsep = "", nbcol = -1)
Good_data_popart <- Sample_matrix_for_popart[Sample_matrix_for_popart$Name %in% rownames(Good_data_cleaned), ]
write.csv(Good_data_popart, file = "plastome_90_traits.csv", row.names = FALSE)
#done already Matrix_haplotypes <- haplotype(cleaned_gene_investigated, locus = 1:length(cleaned_gene_investigated), compress = FALSE,  check.phase = TRUE)
#done already Matrix_haplotypes <- t(Matrix_haplotypes)
#done already row.names(Matrix_haplotypes) <- rownames(cleaned_gene_investigated)
DNAbin_individuals <- as.DNAbin(Matrix_haplotypes_good)
Individual_haplotypes <- haplotype(DNAbin_individuals)
Freq_by_type <- haploFreq(x = DNAbin_individuals, split = "\t", what = 1,  haplo = Individual_haplotypes)
summary(Individual_haplotypes)
Network <- haploNet(h = Individual_haplotypes)
Frequencies <- attr(Network, "freq")
# Save Fasta file to take to Geneious, save as alignment, then import into popart
write.dna(Matrix_haplotypes_good, file = "plastome_SNPs_90.fasta", format = "fasta", colsep = "", nbcol = -1)
file_to_use <- "GATK_mito_filtered_mapQ30_SNPs_3_admixedRemoved_newNames.vcf"
Sample_matrix_for_popart <- read.xlsx("HaploNaming_PeterStokes.xlsx", sheetName = "Pop_art_import")
# Reading in the VCF file and storing info on it
gene_investigated_info <- VCFloci(file_to_use)
gene_investigated <- read.vcf(file_to_use)
names(gene_investigated) <- paste0(gene_investigated_info$POS)
# Figuring out how many SNPs are covered in the samples
table_SNP_characterized <- as.data.frame(!gene_investigated[,]==".")
Number_SNPs_per_sample <- as.data.frame(rowSums(table_SNP_characterized))
write.csv(Number_SNPs_per_sample, "Mito_SNPs_covered.csv")
Good_data <- gene_investigated[which(Number_SNPs_per_sample$`rowSums(table_SNP_characterized)` > (0.88 * length(table_SNP_characterized))) ,]
Good_data_SNP <- as.data.frame(!Good_data[,]==".")
Good_data_SNP_filtered <- apply(Good_data_SNP, 2, function(x)(all(x)))
Good_data_cleaned <- Good_data[,which(Good_data_SNP_filtered == TRUE)]
Matrix_haplotypes_good <- haplotype(Good_data_cleaned, locus = 1:length(Good_data_cleaned), compress = FALSE,  check.phase = TRUE)
Matrix_haplotypes_good <- t(Matrix_haplotypes_good)
row.names(Matrix_haplotypes_good) <- rownames(Good_data_cleaned)
write.dna(Matrix_haplotypes_good, file = "mito_SNPs_88.fasta", format = "fasta", colsep = "", nbcol = -1)
Good_data_popart <- Sample_matrix_for_popart[Sample_matrix_for_popart$Name %in% rownames(Good_data_cleaned), ]
write.csv(Good_data_popart, file = "mito_88_traits.csv", row.names = FALSE)
#done already Matrix_haplotypes <- haplotype(cleaned_gene_investigated, locus = 1:length(cleaned_gene_investigated), compress = FALSE,  check.phase = TRUE)
#done already Matrix_haplotypes <- t(Matrix_haplotypes)
#done already row.names(Matrix_haplotypes) <- rownames(cleaned_gene_investigated)
DNAbin_individuals <- as.DNAbin(Matrix_haplotypes_good)
Individual_haplotypes <- haplotype(DNAbin_individuals)
Freq_by_type <- haploFreq(x = DNAbin_individuals, split = "\t", what = 1,  haplo = Individual_haplotypes)
summary(Individual_haplotypes)
Network <- haploNet(h = Individual_haplotypes)
print.default(Network)
Frequencies <- attr(Network, "freq")
# Save Fasta file to take to Geneious, save as alignment, then import into popart
write.dna(Matrix_haplotypes_good, file = "mito_SNPs_88.fasta", format = "fasta", colsep = "", nbcol = -1)
