geom_polygon( data = myMap_mexico ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_canada ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_guatemala ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_belize ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_honduras ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_elsalvador ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
coord_fixed(xlim = c(-125, -70),  ylim = c(17, 50), ratio = 1.3) +
theme(line = element_blank(),
panel.background = element_rect(fill = "lightblue")) +
NA_Map
NA_Map <- ggplot() +
geom_polygon( data = myMap_usa ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_mexico ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_canada ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_guatemala ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_belize ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_honduras ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
geom_polygon( data = myMap_elsalvador ,
aes(x=long, y = lat, group = group),
fill = "white",
color="black") +
coord_fixed(xlim = c(-125, -70),  ylim = c(17, 50), ratio = 1.3) +
theme(line = element_blank(),
panel.background = element_rect(fill = "lightblue"))
NA_Map
legend_title <- "Domestication Status"
LRE_WILD_Coordinates$DomStatus <- factor(LRE_WILD_Coordinates$DomStatus, levels = c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "argophyllus", "petiolaris fallax", "petiolaris petiolaris", "niveus canescens"))
NA_Map + geom_point(aes(x = Long, y = Lat, colour = DomStatus), data = LRE_WILD_Coordinates, size = 2) +
scale_fill_manual(legend_title, labels = LRE_WILD_Coordinates$DomStatus) +
theme(legend.title = element_text(colour="black", size=10, face="bold")) +
theme(legend.position = c(0.9, 0.2)) +
scale_color_manual(values=c("green", "blue", "red", "purple", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "argophyllus", "petiolaris fallax", "petiolaris petiolaris", "niveus canescens"))
NA_Map
SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution <- read.csv("~/Documents/Science/BlackmanLab/Projects/SNPRelate/SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution.csv")
View(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution)
NA_Map + geom_point(aes(x = Long, y = Lat, colour = DomStatus), data = LRE_WILD_Coordinates, size = 2) +
scale_fill_manual(legend_title, labels = LRE_WILD_Coordinates$DomStatus) +
theme(legend.title = element_text(colour="black", size=10, face="bold")) +
theme(legend.position = c(0.9, 0.2)) +
scale_color_manual(values=c("green", "blue", "red", "purple", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))
NA_Map + geom_point(aes(x = Long, y = Lat, colour = DomStatus), data = LRE_WILD_Coordinates, size = 2) +
scale_fill_manual(legend_title, labels = LRE_WILD_Coordinates$DomStatus) +
theme(legend.title = element_text(colour="black", size=10, face="bold")) +
theme(legend.position = c(0.85, 0.2)) +
scale_color_manual(values=c("green", "blue", "red", "purple", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))
NA_Map + geom_point(aes(x = Long, y = Lat, colour = DomStatus), data = LRE_WILD_Coordinates, size = 2) +
scale_fill_manual(legend_title, labels = LRE_WILD_Coordinates$DomStatus) +
theme(legend.title = element_text(colour="black", size=10, face="bold")) +
theme(legend.position = c(0.80, 0.2)) +
scale_color_manual(values=c("green", "blue", "red", "purple", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))
NA_Map + geom_point(aes(x = Long, y = Lat, colour = DomStatus), data = LRE_WILD_Coordinates, size = 2) +
scale_fill_manual(legend_title, labels = LRE_WILD_Coordinates$DomStatus) +
theme(legend.title = element_text(colour="black", size=10, face="bold")) +
theme(legend.position = c(0.83, 0.2)) +
scale_color_manual(values=c("green", "blue", "red", "purple", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("#00ffff", "#228b22", "#4b0082", "#2f4f4f", "#ff8c00", "#ffff00", "#00ff00", "#ff0000", "#ff00ff", "#1e90ff"))
SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution <- read.csv("~/Documents/Science/BlackmanLab/Projects/SNPRelate/SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution.csv")
View(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution)
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("#00ffff", "#228b22", "#4b0082", "#2f4f4f", "#ff8c00", "#ffff00", "#00ff00", "#ff0000", "#ff00ff", "#1e90ff"))
#theme(legend.position="none")
p
SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution$Population <- factor(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution$Population, levels = c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus canescens"))
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("#00ffff", "#228b22", "#4b0082", "#2f4f4f", "#ff8c00", "#ffff00", "#00ff00", "#ff0000", "#ff00ff", "#1e90ff"))
#theme(legend.position="none")
p
SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution$Population <- factor(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution$Population, levels = c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("#00ffff", "#228b22", "#4b0082", "#2f4f4f", "#ff8c00", "#ffff00", "#00ff00", "#ff0000", "#ff00ff", "#1e90ff"))
#theme(legend.position="none")
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("#00ffff", "#228b22", "#4b0082", "#2f4f4f", "#ff8c00", "#ffff00", "#00ff00", "#ff0000", "#ff00ff", "#1e90ff"))
#theme(legend.position="none")
p
SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution <- read.csv("~/Documents/Science/BlackmanLab/Projects/SNPRelate/SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution.csv")
View(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution)
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("#00ffff", "#228b22", "#4b0082", "#2f4f4f", "#ff8c00", "#ffff00", "#00ff00", "#ff0000", "#ff00ff", "#1e90ff"))
#theme(legend.position="none")
p
SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution$Population <- factor(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution$Population, levels = c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("#00ffff", "#228b22", "#4b0082", "#2f4f4f", "#ff8c00", "#ffff00", "#00ff00", "#ff0000", "#ff00ff", "#1e90ff"))
#theme(legend.position="none")
p
SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution$Population <- factor(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution$Population, levels = c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
heme(legend.position = c(0.83, 0.2))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.position = c(0.83, 0.2))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.position = c(0.9, 0.2))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
guides(shape = guide_legend(override.aes = list(size = 0.5)))
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
guides(shape = guide_legend(override.aes = list(size = 0.5))) +
theme(legend.position = c(0.9, 0.2))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
guides(shape = guide_legend(override.aes = list(size = 5))) +
theme(legend.position = c(0.9, 0.2))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.key.size = unit(2, 'cm'))+
theme(legend.position = c(0.9, 0.2))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.key.size = unit(1, 'cm'))+
theme(legend.position = c(0.9, 0.2))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.key.size = unit(.5, 'cm'))+
theme(legend.position = c(0.9, 0.2))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.key.size = unit(.5, 'cm'))+
theme(legend.position = c(0.9, 0.3))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.key.size = unit(.5, 'cm'))+
theme(legend.position = c(0.85, 0.25))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.key.size = unit(.5, 'cm'))+
theme(legend.position = c(0.85, 0.23))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.key.size = unit(.5, 'cm'))+
theme(legend.position = c(0.83, 0.23))
p
p <- ggplot(SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution, aes(x = PC1, y = PC2, colour = Population)) +
geom_point() +
theme_classic() +
scale_color_manual(values=c("green", "blue", "red", "purple", "black", "pink", "orange", "brown"), labels=c("Wild annuus", "Landrace annuus", "Ethnographic annuus", "Helianthus argophyllus", "Helianthus annuus ssp. texanus", "Helianthus petiolaris ssp. fallax", "Helianthus petiolaris ssp. petiolaris", "Helianthus niveus ssp. canescens"))+
theme(legend.key.size = unit(.5, 'cm'))+
theme(legend.position = c(0.83, 0.21))
p
library(MCMC.qpcr)
mydata=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis.csv")
mydata=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis_CT.csv")
CT_Info=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis_CT.csv")
efficiency_Info=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis_CT.csv")
efficiency_Info=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis_efficiencies.csv")
efficiency_Info=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis_efficiencies.csv")
efficiency_Info=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis_efficiencies.csv")
dd=cq2counts(
data=CT_Info,
genecols=c(5:5),
condcols=(1:4),
effic=efficiency_Info,
Cq1=30
)
head(dd)
CT_Info=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis_CT.csv")
efficiency_Info=read.csv("/Users/peterstokes/Desktop/qRTPCR_analysis_efficiencies.csv")
dd=cq2counts(
data=CT_Info,
genecols=c(5:5),
condcols=(1:4),
effic=efficiency_Info,
Cq1=30
)
head(dd)
dd=cq2counts(
data=CT_Info,
genecols=c(5:5),
condcols=(1:4),
effic=efficiency_Info,
Cq1=37
)
head(dd)
dd=cq2counts(
data=CT_Info,
genecols=c(5:5),
condcols=(1:4),
effic=efficiency_Info,
Cq1=30
)
head(dd)
dd
load("~/Desktop/allChrom.eigenvector")
allChrom <- read.delim("~/Desktop/allChrom.eigenvector")
View(allChrom)
library(ggplot2)
ggplot(allChrom, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
ggplot(allChrom, aes(x = PC1, y = PC4, colour = Pop)) +
geom_point() +
theme_classic()
ggplot(allChrom, aes(x = PC1, y = PC1, colour = Pop)) +
geom_point() +
theme_classic()
ggplot(allChrom, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
allChrom_eigenvector <- read.csv("~/Desktop/allChrom_eigenvector.csv")
View(allChrom_eigenvector)
ggplot(allChrom_eigenvector, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
allChrom_eigenvector <- read.csv("~/Desktop/allChrom_eigenvector.csv")
View(allChrom_eigenvector)
ggplot(allChrom_eigenvector, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
allChrom_eigenvector_2 <- read.csv("~/Desktop/allChrom_eigenvector_2.csv")
View(allChrom_eigenvector_2)
ggplot(allChrom_eigenvector_2, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
install.packages("pegas")
install.packages("lgfortran")
install.packages("pegas")
install.packages("gfortran")
install.packages("ape")
install.packages("pegas")
allChrom_3 <- read.csv("~/Desktop/allChrom_3.eigenvector")
View(allChrom_3)
allChrom_3.eigenvector <- read.csv("~/Desktop/allChrom_3.eigenvector.csv")
View(allChrom_3.eigenvector)
ggplot(allChrom_3.eigenvector, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
library(ggplot2)
ggplot(allChrom_3.eigenvector, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
allChrom_eigenvector <- read.csv("~/Desktop/allChrom_eigenvector.csv")
View(allChrom_eigenvector)
ggplot(allChrom_eigenvector, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
allChrom_3.eigenvector <- read.csv("~/Desktop/allChrom_3.eigenvector.csv")
View(allChrom_3.eigenvector)
ggplot(allChrom_3.eigenvector, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
library(ggplot2)
ggplot(allChrom_3.eigenvector, aes(x = PC1, y = PC2, colour = Pop)) +
geom_point() +
theme_classic()
install.packages("pegas")
install.packages("pegas")
system("gcc --version")
system("gcc --version")
install.packages("pegas")
install.packages("stringr")
install.packages("pegas")
install.packages("pegas")
library(SNPRelate)
setwd("/Users/peterstokes/Documents/Science/Chapter1/10_SNPRelate")
vcf.fn = "/Users/peterstokes/Desktop/PS_Chapter1_allChrom_annotated_biallelicSNPSOnly_noSpanningINDELS_G4_missingFixed.vcf.gz"
snpgdsVCF2GDS(vcf.fn, "SNPRelate_allHelianthus_recoded_test.gds", method="biallelic.only")
snpgdsSummary("SNPRelate_allHelianthus_recoded_test.gds")
genofile <- snpgdsOpen("SNPRelate_allHelianthus_recoded_test.gds")
View(genofile)
head(genofile)
set.seed(1000)
#LD Threshold 0.2
snpset <- snpgdsLDpruning(genofile, ld.threshold=0.2, autosome.only=FALSE)
#LD Threshold 0.1
snpset2 <- snpgdsLDpruning(genofile, ld.threshold=0.1, autosome.only=FALSE)
#edit based on above selection of LD threshold
snpset.id <- unlist(unname(snpset))
####
sample.id <- read.gdsn(index.gdsn(genofile, "sample.id"))
pca <- snpgdsPCA(genofile, snp.id=snpset.id, autosome.only=FALSE, num.thread=4)
View(pca)
View(pca)
pc.percent <- pca$varprop*100
head(round(pc.percent, 2))
tab <- data.frame(sample.id = pca$sample.id, EV1 = pca$eigenvect[,1],    # the first eigenvector
EV2 = pca$eigenvect[,2],    # the second eigenvector
EV3 = pca$eigenvect[,3],
EV4 = pca$eigenvect[,4],
EV5 = pca$eigenvect[,5],
EV6 = pca$eigenvect[,6],
EV7 = pca$eigenvect[,7],
stringsAsFactors = FALSE)
View(tab)
head(tab)
write.table(tab, file = "SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution.csv")
write.table(tab, file = "SNPRelate_Helianthus_recoded_Test_LDThreshold_0_2_forEvolution.csv")
write.table(tab, file = "/Users/peterstokes/Documents/Science/Chapter1/10_SNPRelate/test.csv")
test <- read.csv("~/Documents/Science/Chapter1/10_SNPRelate/test.csv")
View(test)
View(test)
PC1PC2<-ggplot(test, aes(x=EV1, y=EV2))
library(ggplot2)
PC1PC2<-ggplot(test, aes(x=EV1, y=EV2))
PC1PC2 +
scale_color_manual(values=c("#6a0c15", "#cf2027", "#f26c62", "#4752a3", "#6d8bc7", "#529843", "#31b44a", "#78c143", "#b0d237", "#ebe71e", "#ba5da4", "#8959a4", "#cf86b9"))
PC1PC2<-ggplot(test, aes(x=EV1, y=EV2))
PC1PC2
test <- read.csv("~/Documents/Science/Chapter1/10_SNPRelate/test.csv")
View(test)
PC1PC2<-ggplot(test, aes(x=EV1, y=EV2))
PC1PC2 + geom_point(aes(color = factor(Pop)))
test <- read.csv("~/Documents/Science/Chapter1/10_SNPRelate/test.csv")
View(test)
PC1PC2<-ggplot(test, aes(x=EV1, y=EV2))
PC1PC2 + geom_point(aes(color = factor(Pop)))
View(pca)
setwd("/Users/peterstokes/Documents/Science/Chapter1/10_SNPRelate")
setwd("/Users/peterstokes/Documents/Science/Chapter1/10_SNPRelate")
library(SNPRelate)
source("~/Documents/Science/Chapter1/10_SNPRelate/PCA.R")
setwd("/Users/peterstokes/Documents/Science/Chapter1/10_SNPRelate")
library(SNPRelate)
source("~/Documents/Science/Chapter1/10_SNPRelate/PCA.R")
biallelic_vcf.fn = "/global/scratch/users/peter_stokes/Chapter1/VCF_biallelicOnly/PS_Chapter1_allChrom_annotated_biallelicSNPSOnly_noSpanningINDELS_G4_missingFixed.vcf.gz"
snpgdsVCF2GDS(biallelic_vcf.fn, "interspecific_pass1.gds", method="biallelic.only")
biallelic_vcf.fn = "/Users/peterstokes/Desktop/PS_Chapter1_allChrom_annotated_biallelicSNPSOnly_noSpanningINDELS_G4_missingFixed.vcf.gz"
snpgdsVCF2GDS(biallelic_vcf.fn, "interspecific_pass1.gds", method="biallelic.only")
snpgdsSummary("interspecific_pass1.gds")
genofile_interspecific <- snpgdsOpen("interspecific_pass1.gds")
head(genofile_interspecific)
set.seed(1000)
#LD Threshold 0.2
snpset <- snpgdsLDpruning(genofile_interspecific, ld.threshold=0.2, autosome.only=FALSE)
#LD Threshold 0.1
snpset2 <- snpgdsLDpruning(genofile_interspecific, ld.threshold=0.1, autosome.only=FALSE)
pca_interspecific <- snpgdsPCA(genofile_interspecific, snp.id=snpset.id, autosome.only=FALSE, num.thread=4)
#edit based on above selection of LD threshold
snpset.id <- unlist(unname(snpset))
snpset2.id <- unlist(unname(snpset2))
####
sample.id <- read.gdsn(index.gdsn(genofile_interspecific, "sample.id"))
pca_interspecific <- snpgdsPCA(genofile_interspecific, snp.id=snpset.id, autosome.only=FALSE, num.thread=4)
View(pca_interspecific)
pc_interspecific.percent <- pca_interspecific$varprop*100
head(round(pc_interspecific.percent, 2))
tab_interspecific <- data.frame(sample.id = pc_interspecific$sample.id, PC1 = pc_interspecific$eigenvect[,1],    # the first eigenvector
PC2 = pca$eigenvect[,2],    # the second eigenvector
PC3 = pca$eigenvect[,3],
PC4 = pca$eigenvect[,4],
PC5 = pca$eigenvect[,5],
PC6 = pca$eigenvect[,6],
PC7 = pca$eigenvect[,7],
stringsAsFactors = FALSE)
pca_interspecific <- snpgdsPCA(genofile_interspecific, snp.id=snpset.id, autosome.only=FALSE, num.thread=4)
pc_interspecific.percent <- pca_interspecific$varprop*100
head(round(pc_interspecific.percent, 2))
View(pca_interspecific)
tab_interspecific <- data.frame(sample.id = pc_interspecific$sample.id, PC1 = pc_interspecific$eigenvect[,1],    # the first eigenvector
PC2 = pca$eigenvect[,2],    # the second eigenvector
PC3 = pca$eigenvect[,3],
PC4 = pca$eigenvect[,4],
PC5 = pca$eigenvect[,5],
PC6 = pca$eigenvect[,6],
PC7 = pca$eigenvect[,7],
stringsAsFactors = FALSE)
tab_interspecific <- data.frame(sample.id = pca_interspecific$sample.id, PC1 = pca_interspecific$eigenvect[,1],    # the first eigenvector
PC2 = pca$eigenvect[,2],    # the second eigenvector
PC3 = pca$eigenvect[,3],
PC4 = pca$eigenvect[,4],
PC5 = pca$eigenvect[,5],
PC6 = pca$eigenvect[,6],
PC7 = pca$eigenvect[,7],
stringsAsFactors = FALSE)
tab_interspecific <- data.frame(sample.id = pca_interspecific$sample.id, PC1 = pca_interspecific$eigenvect[,1],    # the first eigenvector
PC2 = pca_interspecific$eigenvect[,2],    # the second eigenvector
PC3 = pca_interspecific$eigenvect[,3],
PC4 = pca_interspecific$eigenvect[,4],
PC5 = pca_interspecific$eigenvect[,5],
PC6 = pca_interspecific$eigenvect[,6],
PC7 = pca_interspecific$eigenvect[,7],
stringsAsFactors = FALSE)
head(tab_interspecific)
write.table(tab_interspecific, file = "interspecific_PCA.csv")
library(ggplot2)
interspecific_PCA <- read.csv("~/Documents/Science/Chapter1/10_SNPRelate/interspecific_PCA.csv")
View(interspecific_PCA)
PC1PC2 <- ggplot(interspecific_PCA, aes(x = PC1, y = PC2, colour = Pop_broad)) +
geom_point()
PC1PC2
interspecific_PCA$Pop_broad <- factor(interspecific_PCA$Pop_broad, levels = c("Wild", "Ethnographic", "Landrace", "MexWild", "EthnoWild", "Arg", "Niveus", "PetFal", "PetPet")
interspecific_PCA$Pop_broad <- factor(interspecific_PCA$Pop_broad, levels = c("Wild", "Ethnographic", "Landrace", "MexWild", "EthnoWild", "Arg", "Niveus", "PetFal", "PetPet"))
interspecific_PCA$Pop_broad <- factor(interspecific_PCA$Pop_broad, levels = c("Wild", "Ethnographic", "Landrace", "MexWild", "EthnoWild", "Arg", "Niveus", "PetFal", "PetPet"))
PC1PC2 <- ggplot(interspecific_PCA, aes(x = PC1, y = PC2, colour = Pop_broad)) +
geom_point()
PC1PC2
colors_interspecific <- scale_color_manual(values = c("green", "red", "blue", "pink", "orange", "black", "black", "black", "black"))
PC1PC2 <- ggplot(interspecific_PCA, aes(x = PC1, y = PC2, colour = Pop_broad)) +
geom_point() + colors_interspecific
PC1PC2
source("~/Documents/Science/Chapter1/10_SNPRelate/PCA.R")
library(SNPRelate)
intraspecific_biallelic_vcf.fn = "/Users/peterstokes/Desktop/PS_Chapter1_allChrom_annotated_biallelicSNPSOnly_noSpanningINDELS_G4_missingFixed_annuusOnly.vcf.gz"
snpgdsVCF2GDS(intraspecific_biallelic_vcf.fn, "intraspecific_pass1.gds", method="biallelic.only")
snpgdsSummary("intraspecific_pass1.gds")
genofile_interspecific <- snpgdsOpen("intraspecific_pass1.gds")
head(genofile_intraspecific)
View(interspecific_PCA)
interspecific_PCA$Pop_broad <- factor(interspecific_PCA$Pop_broad, levels = c("Wild", "Ethnographic", "Landrace", "EthnoWild", "MexWild", "Arg", "Niveus", "PetFal", "PetPet"))
colors_interspecific <- scale_color_manual(values = c("#317b0a", "#d90914", "#1a22f7", "#ffba11", "#de1779", "#000000", "#7b7d7b", "#969696", "#bfbfbf"))
PC1PC2_interspecific <- ggplot(interspecific_PCA, aes(x = PC1, y = PC2, colour = Pop_broad)) +
geom_point() + colors_interspecific
PC1PC2_interspecific
snpgdsSummary("intraspecific_pass1.gds")
genofile_interspecific <- snpgdsOpen("intraspecific_pass1.gds")
head(genofile_intraspecific)
genofile_intraspecific <- snpgdsOpen("intraspecific_pass1.gds")
snpgdsSummary("intraspecific_pass1.gds")
genofile_intraspecific <- snpgdsOpen("intraspecific_pass1.gds")
head(genofile_intraspecific)
snpgdsVCF2GDS(intraspecific_biallelic_vcf.fn, "intraspecific_pass1.gds", method="biallelic.only")
intraspecific_biallelic_vcf.fn = "/Users/peterstokes/Desktop/PS_Chapter1_allChrom_annotated_biallelicSNPSOnly_noSpanningINDELS_G4_missingFixed_annuusOnly.vcf.gz"
snpgdsVCF2GDS(intraspecific_biallelic_vcf.fn, "intraspecific_pass1.gds", method="biallelic.only")
intraspecific_biallelic_vcf.fn = "/Users/peterstokes/Desktop/PS_Chapter1_allChrom_annotated_biallelicSNPSOnly_noSpanningINDELS_G4_missingFixed_annuusOnly.vcf.gz"
snpgdsVCF2GDS(intraspecific_biallelic_vcf.fn, "intraspecific_pass1.gds", method="biallelic.only")
